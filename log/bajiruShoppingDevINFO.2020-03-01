Starting ProductInfoRepositoryTest on Stevens-MacBook-Pro.local with PID 3560 (started by stevenwu in /Users/stevenwu/shoppingerp)
The following profiles are active: dev
Multiple Spring Data modules found, entering strict repository configuration mode!
Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.bajiru.shoppingerp.repository.ProductCategoryRepository. If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.bajiru.shoppingerp.repository.ProductInfoRepository. If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
Finished Spring Data repository scanning in 39ms. Found 0 JDBC repository interfaces.
Multiple Spring Data modules found, entering strict repository configuration mode!
Bootstrapping Spring Data JPA repositories in DEFAULT mode.
Finished Spring Data repository scanning in 28ms. Found 2 JPA repository interfaces.
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
HHH000204: Processing PersistenceUnitInfo [name: default]
HHH000412: Hibernate Core {5.4.10.Final}
HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
HikariPool-1 - Starting...
HikariPool-1 - Start completed.
HHH000400: Using dialect: org.hibernate.dialect.MySQL57Dialect
HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
Initialized JPA EntityManagerFactory for persistence unit 'default'
Initializing ExecutorService 'applicationTaskExecutor'
Started ProductInfoRepositoryTest in 5.375 seconds (JVM running for 6.591)
Shutting down ExecutorService 'applicationTaskExecutor'
Closing JPA EntityManagerFactory for persistence unit 'default'
HikariPool-1 - Shutdown initiated...
HikariPool-1 - Shutdown completed.
Starting ProductInfoRepositoryTest on Stevens-MacBook-Pro.local with PID 3710 (started by stevenwu in /Users/stevenwu/shoppingerp)
The following profiles are active: dev
Multiple Spring Data modules found, entering strict repository configuration mode!
Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.bajiru.shoppingerp.repository.ProductCategoryRepository. If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.bajiru.shoppingerp.repository.ProductInfoRepository. If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
Finished Spring Data repository scanning in 45ms. Found 0 JDBC repository interfaces.
Multiple Spring Data modules found, entering strict repository configuration mode!
Bootstrapping Spring Data JPA repositories in DEFAULT mode.
Finished Spring Data repository scanning in 38ms. Found 2 JPA repository interfaces.
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
HHH000204: Processing PersistenceUnitInfo [name: default]
HHH000412: Hibernate Core {5.4.10.Final}
HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
HikariPool-1 - Starting...
HikariPool-1 - Start completed.
HHH000400: Using dialect: org.hibernate.dialect.MySQL57Dialect
HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
Initialized JPA EntityManagerFactory for persistence unit 'default'
Initializing ExecutorService 'applicationTaskExecutor'
Started ProductInfoRepositoryTest in 4.49 seconds (JVM running for 5.504)
Shutting down ExecutorService 'applicationTaskExecutor'
Closing JPA EntityManagerFactory for persistence unit 'default'
HikariPool-1 - Shutdown initiated...
HikariPool-1 - Shutdown completed.
Starting ProductInfoRepositoryTest on Stevens-MacBook-Pro.local with PID 3732 (started by stevenwu in /Users/stevenwu/shoppingerp)
The following profiles are active: dev
Multiple Spring Data modules found, entering strict repository configuration mode!
Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.bajiru.shoppingerp.repository.ProductCategoryRepository. If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.bajiru.shoppingerp.repository.ProductInfoRepository. If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
Finished Spring Data repository scanning in 46ms. Found 0 JDBC repository interfaces.
Multiple Spring Data modules found, entering strict repository configuration mode!
Bootstrapping Spring Data JPA repositories in DEFAULT mode.
Finished Spring Data repository scanning in 37ms. Found 2 JPA repository interfaces.
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
HHH000204: Processing PersistenceUnitInfo [name: default]
HHH000412: Hibernate Core {5.4.10.Final}
HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
HikariPool-1 - Starting...
HikariPool-1 - Start completed.
HHH000400: Using dialect: org.hibernate.dialect.MySQL57Dialect
HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
Initialized JPA EntityManagerFactory for persistence unit 'default'
Initializing ExecutorService 'applicationTaskExecutor'
Started ProductInfoRepositoryTest in 4.495 seconds (JVM running for 5.556)
Shutting down ExecutorService 'applicationTaskExecutor'
Closing JPA EntityManagerFactory for persistence unit 'default'
HikariPool-1 - Shutdown initiated...
HikariPool-1 - Shutdown completed.
Starting ProductInfoRepositoryTest on Stevens-MacBook-Pro.local with PID 6236 (started by stevenwu in /Users/stevenwu/shoppingerp)
The following profiles are active: dev
Multiple Spring Data modules found, entering strict repository configuration mode!
Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.bajiru.shoppingerp.repository.ProductCategoryRepository. If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.bajiru.shoppingerp.repository.ProductInfoRepository. If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
Finished Spring Data repository scanning in 40ms. Found 0 JDBC repository interfaces.
Multiple Spring Data modules found, entering strict repository configuration mode!
Bootstrapping Spring Data JPA repositories in DEFAULT mode.
Finished Spring Data repository scanning in 30ms. Found 2 JPA repository interfaces.
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
HHH000204: Processing PersistenceUnitInfo [name: default]
HHH000412: Hibernate Core {5.4.10.Final}
HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
HikariPool-1 - Starting...
HikariPool-1 - Start completed.
HHH000400: Using dialect: org.hibernate.dialect.MySQL57Dialect
HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
Initialized JPA EntityManagerFactory for persistence unit 'default'
Initializing ExecutorService 'applicationTaskExecutor'
Started ProductInfoRepositoryTest in 4.3 seconds (JVM running for 5.256)
Shutting down ExecutorService 'applicationTaskExecutor'
Closing JPA EntityManagerFactory for persistence unit 'default'
HikariPool-1 - Shutdown initiated...
HikariPool-1 - Shutdown completed.
Starting ProductInfoRepositoryTest on Stevens-MacBook-Pro.local with PID 6267 (started by stevenwu in /Users/stevenwu/shoppingerp)
The following profiles are active: dev
Multiple Spring Data modules found, entering strict repository configuration mode!
Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.bajiru.shoppingerp.repository.ProductCategoryRepository. If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.bajiru.shoppingerp.repository.ProductInfoRepository. If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
Finished Spring Data repository scanning in 45ms. Found 0 JDBC repository interfaces.
Multiple Spring Data modules found, entering strict repository configuration mode!
Bootstrapping Spring Data JPA repositories in DEFAULT mode.
Finished Spring Data repository scanning in 39ms. Found 2 JPA repository interfaces.
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
HHH000204: Processing PersistenceUnitInfo [name: default]
HHH000412: Hibernate Core {5.4.10.Final}
HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
HikariPool-1 - Starting...
HikariPool-1 - Start completed.
HHH000400: Using dialect: org.hibernate.dialect.MySQL57Dialect
HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
Initialized JPA EntityManagerFactory for persistence unit 'default'
Initializing ExecutorService 'applicationTaskExecutor'
Started ProductInfoRepositoryTest in 4.286 seconds (JVM running for 5.229)
Began transaction (1) for test context [DefaultTestContext@268f106e testClass = ProductInfoRepositoryTest, testInstance = com.bajiru.shoppingerp.repository.ProductInfoRepositoryTest@3bc891f2, testMethod = saveTest@ProductInfoRepositoryTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6e9a5ed8 testClass = ProductInfoRepositoryTest, locations = '{}', classes = '{class com.bajiru.shoppingerp.ShoppingerpApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@595b007d, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@399f45b1, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@4ec4f3a0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@55b699ef], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.activateListener' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@45f1413c]; rollback [true]
Rolled back transaction for test: [DefaultTestContext@268f106e testClass = ProductInfoRepositoryTest, testInstance = com.bajiru.shoppingerp.repository.ProductInfoRepositoryTest@3bc891f2, testMethod = saveTest@ProductInfoRepositoryTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6e9a5ed8 testClass = ProductInfoRepositoryTest, locations = '{}', classes = '{class com.bajiru.shoppingerp.ShoppingerpApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@595b007d, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@399f45b1, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@4ec4f3a0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@55b699ef], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.activateListener' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Shutting down ExecutorService 'applicationTaskExecutor'
Closing JPA EntityManagerFactory for persistence unit 'default'
HikariPool-1 - Shutdown initiated...
HikariPool-1 - Shutdown completed.
Starting ProductInfoRepositoryTest on Stevens-MacBook-Pro.local with PID 6317 (started by stevenwu in /Users/stevenwu/shoppingerp)
The following profiles are active: dev
Multiple Spring Data modules found, entering strict repository configuration mode!
Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.bajiru.shoppingerp.repository.ProductCategoryRepository. If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.bajiru.shoppingerp.repository.ProductInfoRepository. If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
Finished Spring Data repository scanning in 41ms. Found 0 JDBC repository interfaces.
Multiple Spring Data modules found, entering strict repository configuration mode!
Bootstrapping Spring Data JPA repositories in DEFAULT mode.
Finished Spring Data repository scanning in 35ms. Found 2 JPA repository interfaces.
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
HHH000204: Processing PersistenceUnitInfo [name: default]
HHH000412: Hibernate Core {5.4.10.Final}
HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
HikariPool-1 - Starting...
HikariPool-1 - Start completed.
HHH000400: Using dialect: org.hibernate.dialect.MySQL57Dialect
HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
Initialized JPA EntityManagerFactory for persistence unit 'default'
Initializing ExecutorService 'applicationTaskExecutor'
Started ProductInfoRepositoryTest in 4.337 seconds (JVM running for 5.279)
Began transaction (1) for test context [DefaultTestContext@5386659f testClass = ProductInfoRepositoryTest, testInstance = com.bajiru.shoppingerp.repository.ProductInfoRepositoryTest@6bdedbbd, testMethod = saveTest@ProductInfoRepositoryTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@14028087 testClass = ProductInfoRepositoryTest, locations = '{}', classes = '{class com.bajiru.shoppingerp.ShoppingerpApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@222545dc, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@5158b42f, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@1623b78d, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@38d8f54a], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.activateListener' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@4eac65db]; rollback [true]
Rolled back transaction for test: [DefaultTestContext@5386659f testClass = ProductInfoRepositoryTest, testInstance = com.bajiru.shoppingerp.repository.ProductInfoRepositoryTest@6bdedbbd, testMethod = saveTest@ProductInfoRepositoryTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@14028087 testClass = ProductInfoRepositoryTest, locations = '{}', classes = '{class com.bajiru.shoppingerp.ShoppingerpApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@222545dc, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@5158b42f, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@1623b78d, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@38d8f54a], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.activateListener' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Shutting down ExecutorService 'applicationTaskExecutor'
Closing JPA EntityManagerFactory for persistence unit 'default'
HikariPool-1 - Shutdown initiated...
HikariPool-1 - Shutdown completed.
Starting ProductInfoRepositoryTest on Stevens-MacBook-Pro.local with PID 6845 (started by stevenwu in /Users/stevenwu/shoppingerp)
The following profiles are active: dev
Multiple Spring Data modules found, entering strict repository configuration mode!
Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.bajiru.shoppingerp.repository.ProductCategoryRepository. If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.bajiru.shoppingerp.repository.ProductInfoRepository. If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
Finished Spring Data repository scanning in 45ms. Found 0 JDBC repository interfaces.
Multiple Spring Data modules found, entering strict repository configuration mode!
Bootstrapping Spring Data JPA repositories in DEFAULT mode.
Finished Spring Data repository scanning in 34ms. Found 2 JPA repository interfaces.
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
HHH000204: Processing PersistenceUnitInfo [name: default]
HHH000412: Hibernate Core {5.4.10.Final}
HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
HikariPool-1 - Starting...
HikariPool-1 - Start completed.
HHH000400: Using dialect: org.hibernate.dialect.MySQL57Dialect
HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
Initialized JPA EntityManagerFactory for persistence unit 'default'
Initializing ExecutorService 'applicationTaskExecutor'
Started ProductInfoRepositoryTest in 4.349 seconds (JVM running for 5.278)
Shutting down ExecutorService 'applicationTaskExecutor'
Closing JPA EntityManagerFactory for persistence unit 'default'
HikariPool-1 - Shutdown initiated...
HikariPool-1 - Shutdown completed.
Starting ProductInfoRepositoryTest on Stevens-MacBook-Pro.local with PID 6994 (started by stevenwu in /Users/stevenwu/shoppingerp)
The following profiles are active: dev
Multiple Spring Data modules found, entering strict repository configuration mode!
Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.bajiru.shoppingerp.repository.ProductCategoryRepository. If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.bajiru.shoppingerp.repository.ProductInfoRepository. If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
Finished Spring Data repository scanning in 37ms. Found 0 JDBC repository interfaces.
Multiple Spring Data modules found, entering strict repository configuration mode!
Bootstrapping Spring Data JPA repositories in DEFAULT mode.
Finished Spring Data repository scanning in 33ms. Found 2 JPA repository interfaces.
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
HHH000204: Processing PersistenceUnitInfo [name: default]
HHH000412: Hibernate Core {5.4.10.Final}
HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
HikariPool-1 - Starting...
HikariPool-1 - Start completed.
HHH000400: Using dialect: org.hibernate.dialect.MySQL57Dialect
HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
Initialized JPA EntityManagerFactory for persistence unit 'default'
Initializing ExecutorService 'applicationTaskExecutor'
Started ProductInfoRepositoryTest in 4.256 seconds (JVM running for 5.14)
Shutting down ExecutorService 'applicationTaskExecutor'
Closing JPA EntityManagerFactory for persistence unit 'default'
HikariPool-1 - Shutdown initiated...
HikariPool-1 - Shutdown completed.
Starting ProductInfoRepositoryTest on Stevens-MacBook-Pro.local with PID 9554 (started by stevenwu in /Users/stevenwu/shoppingerp)
The following profiles are active: dev
Multiple Spring Data modules found, entering strict repository configuration mode!
Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.bajiru.shoppingerp.repository.ProductCategoryRepository. If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.bajiru.shoppingerp.repository.ProductInfoRepository. If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
Finished Spring Data repository scanning in 41ms. Found 0 JDBC repository interfaces.
Multiple Spring Data modules found, entering strict repository configuration mode!
Bootstrapping Spring Data JPA repositories in DEFAULT mode.
Finished Spring Data repository scanning in 43ms. Found 2 JPA repository interfaces.
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
HHH000204: Processing PersistenceUnitInfo [name: default]
HHH000412: Hibernate Core {5.4.10.Final}
HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
HikariPool-1 - Starting...
HikariPool-1 - Start completed.
HHH000400: Using dialect: org.hibernate.dialect.MySQL57Dialect
HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
Initialized JPA EntityManagerFactory for persistence unit 'default'
Initializing ExecutorService 'applicationTaskExecutor'
Started ProductInfoRepositoryTest in 4.32 seconds (JVM running for 5.275)
Began transaction (1) for test context [DefaultTestContext@268f106e testClass = ProductInfoRepositoryTest, testInstance = com.bajiru.shoppingerp.repository.ProductInfoRepositoryTest@6c1f15df, testMethod = saveTest@ProductInfoRepositoryTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6e9a5ed8 testClass = ProductInfoRepositoryTest, locations = '{}', classes = '{class com.bajiru.shoppingerp.ShoppingerpApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@595b007d, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@399f45b1, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@4ec4f3a0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@55b699ef], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.activateListener' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6d7865d6]; rollback [true]
Rolled back transaction for test: [DefaultTestContext@268f106e testClass = ProductInfoRepositoryTest, testInstance = com.bajiru.shoppingerp.repository.ProductInfoRepositoryTest@6c1f15df, testMethod = saveTest@ProductInfoRepositoryTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6e9a5ed8 testClass = ProductInfoRepositoryTest, locations = '{}', classes = '{class com.bajiru.shoppingerp.ShoppingerpApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@595b007d, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@399f45b1, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@4ec4f3a0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@55b699ef], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.activateListener' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
Shutting down ExecutorService 'applicationTaskExecutor'
Closing JPA EntityManagerFactory for persistence unit 'default'
HikariPool-1 - Shutdown initiated...
HikariPool-1 - Shutdown completed.
Starting ProductInfoRepositoryTest on Stevens-MacBook-Pro.local with PID 9581 (started by stevenwu in /Users/stevenwu/shoppingerp)
The following profiles are active: dev
Multiple Spring Data modules found, entering strict repository configuration mode!
Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.bajiru.shoppingerp.repository.ProductCategoryRepository. If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.bajiru.shoppingerp.repository.ProductInfoRepository. If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
Finished Spring Data repository scanning in 38ms. Found 0 JDBC repository interfaces.
Multiple Spring Data modules found, entering strict repository configuration mode!
Bootstrapping Spring Data JPA repositories in DEFAULT mode.
Finished Spring Data repository scanning in 33ms. Found 2 JPA repository interfaces.
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
HHH000204: Processing PersistenceUnitInfo [name: default]
HHH000412: Hibernate Core {5.4.10.Final}
HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
HikariPool-1 - Starting...
HikariPool-1 - Start completed.
HHH000400: Using dialect: org.hibernate.dialect.MySQL57Dialect
HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
Initialized JPA EntityManagerFactory for persistence unit 'default'
Initializing ExecutorService 'applicationTaskExecutor'
Started ProductInfoRepositoryTest in 4.209 seconds (JVM running for 5.129)
Shutting down ExecutorService 'applicationTaskExecutor'
Closing JPA EntityManagerFactory for persistence unit 'default'
HikariPool-1 - Shutdown initiated...
HikariPool-1 - Shutdown completed.
Starting ProductInfoRepositoryTest on Stevens-MacBook-Pro.local with PID 9658 (started by stevenwu in /Users/stevenwu/shoppingerp)
The following profiles are active: dev
Multiple Spring Data modules found, entering strict repository configuration mode!
Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.bajiru.shoppingerp.repository.ProductCategoryRepository. If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.bajiru.shoppingerp.repository.ProductInfoRepository. If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
Finished Spring Data repository scanning in 36ms. Found 0 JDBC repository interfaces.
Multiple Spring Data modules found, entering strict repository configuration mode!
Bootstrapping Spring Data JPA repositories in DEFAULT mode.
Finished Spring Data repository scanning in 35ms. Found 2 JPA repository interfaces.
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
HHH000204: Processing PersistenceUnitInfo [name: default]
HHH000412: Hibernate Core {5.4.10.Final}
HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
HikariPool-1 - Starting...
HikariPool-1 - Start completed.
HHH000400: Using dialect: org.hibernate.dialect.MySQL57Dialect
HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
Initialized JPA EntityManagerFactory for persistence unit 'default'
Initializing ExecutorService 'applicationTaskExecutor'
Started ProductInfoRepositoryTest in 4.473 seconds (JVM running for 5.385)
Shutting down ExecutorService 'applicationTaskExecutor'
Closing JPA EntityManagerFactory for persistence unit 'default'
HikariPool-1 - Shutdown initiated...
HikariPool-1 - Shutdown completed.
Starting ProductInfoRepositoryTest on Stevens-MacBook-Pro.local with PID 9695 (started by stevenwu in /Users/stevenwu/shoppingerp)
The following profiles are active: dev
Multiple Spring Data modules found, entering strict repository configuration mode!
Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.bajiru.shoppingerp.repository.ProductCategoryRepository. If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.bajiru.shoppingerp.repository.ProductInfoRepository. If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
Finished Spring Data repository scanning in 36ms. Found 0 JDBC repository interfaces.
Multiple Spring Data modules found, entering strict repository configuration mode!
Bootstrapping Spring Data JPA repositories in DEFAULT mode.
Finished Spring Data repository scanning in 31ms. Found 2 JPA repository interfaces.
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
HHH000204: Processing PersistenceUnitInfo [name: default]
HHH000412: Hibernate Core {5.4.10.Final}
HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
HikariPool-1 - Starting...
HikariPool-1 - Start completed.
HHH000400: Using dialect: org.hibernate.dialect.MySQL57Dialect
HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
Initialized JPA EntityManagerFactory for persistence unit 'default'
Initializing ExecutorService 'applicationTaskExecutor'
Started ProductInfoRepositoryTest in 4.204 seconds (JVM running for 5.122)
Shutting down ExecutorService 'applicationTaskExecutor'
Closing JPA EntityManagerFactory for persistence unit 'default'
HikariPool-1 - Shutdown initiated...
HikariPool-1 - Shutdown completed.
